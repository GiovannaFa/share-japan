<div class="card">
    <div class="card-header bg-light">
        <h3 class="card-title text-white">
            <i>Modify your post</i>
        </h3>
    </div>
    <div class="card-body">
        <div style="height: 70vh;">
            <form action="/edit-form/{{ post._id }}?_method=PUT" method="POST">
                <input type="hidden" name="_method" value="PUT">
                <div class="form-group">
                    <select name="where">
                        <option selected value="{{post.where}}">{{UpperCase post.where}}</option>
                        <option value="tokyo">TOKYO</option>
                        <option value="kyoto">KYOTO</option>
                        <option value="osaka">OSAKA</option>
                        <option value="sapporo">SAPPORO</option>
                    </select>
                </div>

                <div class="form-group">
                    <select name="about">
                        <option selected value="{{post.about}}">{{UpperCase post.about}}</option>
                        <option value="food">FOOD</option>
                        <option value="night_life">NIGHT LIFE</option>
                        <option value="anecdote">ANECDOTE</option>
                        <option value="for_free">FOR FREE</option>
                        <option value="itinerary">ITINERARY</option>
                    </select>
                </div>

                <div class="form-group">
                    <input type="text" name="title" class="form-control" value="{{post.title}}">
                </div>

                <div class="form-group">
                    <textarea name="description" class="form-control" style="height: 35vh;">{{post.description}}</textarea>
                </div>
                
                <div class="form-group">
                    <div class="input-group">
                        <div class="custom-file">
                            <input type="file" name="image" class="custom-file-input" id="inputGroup" aria-describedby="inputGroupFileAddon" multiple>
                            <label class="custom-file-label" for="inputGroupFile">Choose your files</label>
                        </div>
                    </div>
                </div>

                {{#if post.filenames}}
                <div class="form-group">
                    <label for="uploadedFiles"/>
                    <div id="uploadedFiles" style="display: flex; flex-wrap: wrap; gap: 10px;">
                        {{#each post.filenames}}
                        <div class="img-wrapper" style="position: relative; display: inline-block; margin-right: 10px; margin-bottom: 10px;">
                            <img src="/public/upload/{{../post._id}}/{{this}}" alt="{{../post._id}}" class="img-thumbnail" style="max-width: 200px;">
                            <button class="delete-btn" style="position: absolute; top: 5px; right: 5px; background: rgba(0, 0, 0, 0.5); color: white; border: none; border-radius: 50%; cursor: pointer; padding: 5px; font-size: 16px;">&times;</button>
                        </div>
                        {{/each}}
                    </div>
                </div>
                {{/if}}

                <!-- Preview Area -->
                <div id="imagePreviewContainer" class="form-group" style="display: none;">
                    <label for="imagePreview"/>
                    <!-- This will hold all preview images -->
                    <div id="imagePreviews" style="display: flex; flex-wrap: wrap; gap: 10px;"></div>
                </div>

                <div class="form-group">
                    <button class="btn btn-primary btn-block" type="submit">
                        Save
                    </button>
                </div>

                <script>
                    let selectedFiles = []; // Track selected files

                    // Listen for file selection
                    document.getElementById('inputGroup').addEventListener('change', function(event) {
                        const files = event.target.files;
                        const previewContainer = document.getElementById('imagePreviewContainer');
                        const imagePreviews = document.getElementById('imagePreviews');

                        // Show the preview container if files are selected
                        if (files.length > 0) {
                            previewContainer.style.display = 'block'; // Show the preview container
                        }

                        // Loop through all selected files and create a preview for each one
                        Array.from(files).forEach(file => {
                            if (file.type.startsWith('image/')) {  // Only process image files
                                const reader = new FileReader();

                                reader.onload = function(e) {
                                    // Create a new image element for each file
                                    const imgWrapper = document.createElement('div');
                                    imgWrapper.classList.add('img-wrapper');
                                    imgWrapper.style.position = 'relative';
                                    imgWrapper.style.display = 'inline-block';
                                    imgWrapper.style.marginRight = '10px';
                                    imgWrapper.style.marginBottom = '10px';

                                    const img = document.createElement('img');
                                    img.src = e.target.result;
                                    img.classList.add('img-thumbnail');
                                    img.style.maxWidth = '200px';

                                    // Create the delete button
                                    const deleteBtn = document.createElement('button');
                                    deleteBtn.classList.add('delete-btn');
                                    deleteBtn.innerHTML = '&times;'; // "X" symbol
                                    deleteBtn.style.position = 'absolute';
                                    deleteBtn.style.top = '5px';
                                    deleteBtn.style.right = '5px';
                                    deleteBtn.style.background = 'rgba(0, 0, 0, 0.5)';
                                    deleteBtn.style.color = 'white';
                                    deleteBtn.style.border = 'none';
                                    deleteBtn.style.borderRadius = '50%';
                                    deleteBtn.style.cursor = 'pointer';
                                    deleteBtn.style.padding = '5px';
                                    deleteBtn.style.fontSize = '16px';
                                    imgWrapper.style.position = 'relative'; // So the delete button is positioned relative to the image wrapper

                                    imgWrapper.appendChild(img);
                                    imgWrapper.appendChild(deleteBtn);

                                    // Append the image wrapper to the preview container (now next to others)
                                    imagePreviews.appendChild(imgWrapper);

                                    // Store the file in the selectedFiles array
                                    selectedFiles.push(file);

                                    // Attach the delete functionality to the delete button for new images
                                    deleteBtn.addEventListener('click', function() {
                                        // Remove the file from the selectedFiles array
                                        const index = selectedFiles.indexOf(file);
                                        if (index > -1) {
                                            selectedFiles.splice(index, 1); // Remove the file from the array
                                        }

                                        // Remove the image wrapper from the DOM
                                        imagePreviews.removeChild(imgWrapper);

                                        // Update the file input's file list (create a new one without the deleted file)
                                        updateFileInput();
                                    });
                                };

                                // Read the file as a data URL to generate a preview
                                reader.readAsDataURL(file);
                            }
                        });
                    });

                    // Function to update the file input's list of files
                    function updateFileInput() {
                        const input = document.getElementById('inputGroup');

                        // Create a new DataTransfer object to manage the file list
                        const dataTransfer = new DataTransfer();

                        // Add all the remaining files in the selectedFiles array to the new file list
                        selectedFiles.forEach(file => {
                            dataTransfer.items.add(file);
                        });

                        // Set the new file list to the file input's files property
                        input.files = dataTransfer.files;
                    }

                    // Add delete functionality to existing images (those already on the page)
                    document.querySelectorAll('#uploadedFiles .delete-btn').forEach(function(deleteBtn) {
                        deleteBtn.addEventListener('click', function() {
                            const imgWrapper = deleteBtn.closest('.img-wrapper');
                            imgWrapper.remove(); // Remove the image wrapper from the DOM
                        });
                    });
                </script>
            </form>
        </div>
    </div>
</div>