<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Share Japan</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">Share Japan</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarContent">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                    {{#if user}}
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownUser" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                {{loggedUser.name}}
                            </a>
                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdownUser">
                                <a class="dropdown-item" href="/user/profile">My Posts</a>
                                <a class="dropdown-item" href="/form">Tell your experience</a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="/user/settings">Settings</a>
                                <a class="dropdown-item" href="/user/logout">Logout</a>
                            </div>
                        </li>
                    {{else}}
                        <li class="nav-item">
                            <a class="nav-link" href="/user/login">Login</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/user/signup">Signup</a>
                        </li>
                    {{/if}}
                </ul>
            </div>
        </div>
    </nav>

    <!-- Bootstrap 5 JS (includes Popper.js) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
    const dropdownMenu = document.querySelector('#reviewsDropdown .dropdown-menu');

    // Fetch JSON data
    fetch('http://localhost:3005/public/data/categories.json')
        .then(response => response.json())
        .then(data => {
            // Generate dropdown items
            data.forEach(category => {
                if (category.subcategory && category.subcategory.length > 0) {
                    // Create a dropdown submenu for categories with subcategories
                    const dropdownItem = document.createElement('div');
                    dropdownItem.className = 'dropdown';

                    const dropdownToggle = document.createElement('a');
                    dropdownToggle.className = 'dropdown-item dropdown-toggle';
                    dropdownToggle.href = '#';
                    dropdownToggle.setAttribute('role', 'button');
                    dropdownToggle.setAttribute('data-bs-toggle', 'dropdown');
                    dropdownToggle.setAttribute('aria-expanded', 'false');
                    dropdownToggle.textContent = category.category;

                    const submenu = document.createElement('div');
                    submenu.className = 'dropdown-menu';

                    // Generate subcategory links with dynamic href
                    category.subcategory.forEach(sub => {
                        const subItem = document.createElement('a');
                        subItem.className = 'dropdown-item';
                        subItem.href = `/topic/${category.category}/${sub}`;
                        subItem.textContent = sub;
                        submenu.appendChild(subItem);
                    });

                    dropdownItem.appendChild(dropdownToggle);
                    dropdownItem.appendChild(submenu);
                    dropdownMenu.appendChild(dropdownItem);
                } else {
                    // Create a regular dropdown item for categories without subcategories
                    const dropdownItem = document.createElement('a');
                    dropdownItem.className = 'dropdown-item';
                    dropdownItem.href = '#';
                    dropdownItem.textContent = category.category;
                    dropdownMenu.appendChild(dropdownItem);
                }
            });

            // Initialize Bootstrap dropdowns
            const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
            dropdownToggles.forEach(toggle => {
                toggle.addEventListener('click', (e) => {
                    e.preventDefault();
                    e.stopPropagation();

                    // Close all other dropdowns
                    dropdownToggles.forEach(otherToggle => {
                        if (otherToggle !== toggle) {
                            const otherDropdown = bootstrap.Dropdown.getInstance(otherToggle);
                            if (otherDropdown) {
                                otherDropdown.hide();
                            }
                        }
                    });

                    // Toggle the current dropdown
                    const dropdown = new bootstrap.Dropdown(toggle);
                    dropdown.toggle();
                });
            });

            // Close dropdowns when clicking outside
            document.addEventListener('click', (e) => {
                if (!e.target.closest('.dropdown-toggle')) {
                    dropdownToggles.forEach(toggle => {
                        const dropdown = bootstrap.Dropdown.getInstance(toggle);
                        if (dropdown) {
                            dropdown.hide();
                        }
                    });
                }
            });
        })
        .catch(error => console.error('Error fetching JSON:', error));
});
    </script>
</body>
</html>